// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BannerCard matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BannerCard
    banner="hello world"
    onBannerTextChange={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(CardHeader)
          title="Announcements"
        />,
        <WithStyles(CardContent)>
          <TextField
            id="bannerText"
            label="Banner Message"
            onChange={[Function]}
            required={false}
            select={false}
            value="hello world"
            variant="standard"
          />
        </WithStyles(CardContent)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "title": "Announcements",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <TextField
            id="bannerText"
            label="Banner Message"
            onChange={[Function]}
            required={false}
            select={false}
            value="hello world"
            variant="standard"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "id": "bannerText",
            "label": "Banner Message",
            "onChange": [Function],
            "required": false,
            "select": false,
            "value": "hello world",
            "variant": "standard",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(CardHeader)
            title="Announcements"
          />,
          <WithStyles(CardContent)>
            <TextField
              id="bannerText"
              label="Banner Message"
              onChange={[Function]}
              required={false}
              select={false}
              value="hello world"
              variant="standard"
            />
          </WithStyles(CardContent)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "title": "Announcements",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <TextField
              id="bannerText"
              label="Banner Message"
              onChange={[Function]}
              required={false}
              select={false}
              value="hello world"
              variant="standard"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "id": "bannerText",
              "label": "Banner Message",
              "onChange": [Function],
              "required": false,
              "select": false,
              "value": "hello world",
              "variant": "standard",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
